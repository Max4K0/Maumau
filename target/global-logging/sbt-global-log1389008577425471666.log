[debug] > Exec(;project {file:/C:/Users/Max/Desktop/Programmierung/Scala/Maumau/}maumau; reload, None, None)
[debug] > Exec(project {file:/C:/Users/Max/Desktop/Programmierung/Scala/Maumau/}maumau, None, None)
[info] set current project to main (in build file:/C:/Users/Max/Desktop/Programmierung/Scala/Maumau/)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.3 (Amazon.com Inc. Java 1.8.0_275)
[debug]       Load.loadUnit: plugins took 20.8714ms
[debug]       Load.loadUnit: defsScala took 0.003ms
[debug] [Loading] Scanning directory C:\Users\Max\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Max\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.8643 ms
[debug]           Load.resolveProject(global-plugins) took 1.6975ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Max\.sbt\1.0\plugins, plugins: List(<none>))) took 2.9438ms
[debug] [Loading] Done in C:\Users\Max\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 3.8646ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.0126ms
[debug]     Load.loadUnit(file:/C:/Users/Max/.sbt/1.0/plugins/, ...) took 25.3589ms
[debug]   Load.apply: load took 26.5237ms
[debug]   Load.apply: resolveProjects took 0.1125ms
[debug]   Load.apply: finalTransforms took 5.0005ms
[debug]   Load.apply: config.delegates took 0.2763ms
[debug]   Load.apply: Def.make(settings)... took 32.5078ms
[debug]   Load.apply: structureIndex took 13.4506ms
[debug]   Load.apply: mkStreams took 0.0033ms
[info] loading global plugins from C:\Users\Max\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 274.3429ms
[debug]           Load.loadUnit: plugins took 90.3589ms
[debug]           Load.loadUnit: defsScala took 0.0069ms
[debug] [Loading] Scanning directory C:\Users\Max\Desktop\Programmierung\Scala\Maumau\project
[debug]             Load.loadUnit: mkEval took 0.3016ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Max\Desktop\Programmierung\Scala\Maumau\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.3137 ms
[info] loading settings for project maumau-build from idea.sbt ...
[debug]               Load.resolveProject(maumau-build) took 1.5995ms
[debug]             Load.loadTransitive: finalizeProject(Project(id maumau-build, base: C:\Users\Max\Desktop\Programmierung\Scala\Maumau\project, plugins: List(<none>))) took 3.2657ms
[debug] [Loading] Done in C:\Users\Max\Desktop\Programmierung\Scala\Maumau\project, returning: (maumau-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 22.2602ms
[debug]           Load.loadUnit: cleanEvalClasses took 1.8166ms
[debug]         Load.loadUnit(file:/C:/Users/Max/Desktop/Programmierung/Scala/Maumau/project/, ...) took 115.6488ms
[debug]       Load.apply: load took 117.0527ms
[debug]       Load.apply: resolveProjects took 0.1134ms
[debug]       Load.apply: finalTransforms took 6.0013ms
[debug]       Load.apply: config.delegates took 0.3177ms
[debug]       Load.apply: Def.make(settings)... took 39.2859ms
[debug]       Load.apply: structureIndex took 17.7378ms
[debug]       Load.apply: mkStreams took 0.0032ms
[info] loading project definition from C:\Users\Max\Desktop\Programmierung\Scala\Maumau\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 384.72ms
[debug]     Load.loadUnit: defsScala took 0.0049ms
[debug] [Loading] Scanning directory C:\Users\Max\Desktop\Programmierung\Scala\Maumau
[debug]       Load.loadUnit: mkEval took 0.3957ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Max\Desktop\Programmierung\Scala\Maumau, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.4773 ms
[info] loading settings for project maumau from build.sbt ...
[debug]         Load.resolveProject(maumau) took 57.9805ms
[debug]       Load.loadTransitive: finalizeProject(Project(id maumau, base: C:\Users\Max\Desktop\Programmierung\Scala\Maumau, plugins: List(<none>))) took 60.1806ms
[debug] [Loading] Done in C:\Users\Max\Desktop\Programmierung\Scala\Maumau, returning: (maumau)
[debug]     Load.loadUnit: loadedProjectsRaw took 157.5035ms
[debug]     Load.loadUnit: cleanEvalClasses took 6.8627ms
[debug]   Load.loadUnit(file:/C:/Users/Max/Desktop/Programmierung/Scala/Maumau/, ...) took 551.7265ms
[debug] Load.apply: load took 553.3383ms
[debug] Load.apply: resolveProjects took 0.1218ms
[debug] Load.apply: finalTransforms took 24.4923ms
[debug] Load.apply: config.delegates took 0.4255ms
[debug] Load.apply: Def.make(settings)... took 138.4853ms
[debug] Load.apply: structureIndex took 40.5621ms
[debug] Load.apply: mkStreams took 0.0049ms
[info] set current project to main (in build file:/C:/Users/Max/Desktop/Programmierung/Scala/Maumau/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(idea-shell, None, None)
[debug] > Exec(, None, None)
[debug] > Exec(idea-shell, None, None)
